{"ast":null,"code":"const API_URL = 'http://localhost:32831';\nexport const clienteService = {\n  async getAll() {\n    const response = await fetch(`${API_URL}/cliente/clientes`);\n    if (!response.ok) {\n      throw new Error('Erro ao buscar clientes');\n    }\n    return response.json();\n  },\n  async getById(id) {\n    const response = await fetch(`${API_URL}/cliente/${id}`);\n    if (!response.ok) {\n      throw new Error('Erro ao buscar cliente');\n    }\n    return response.json();\n  },\n  async create(cliente) {\n    const response = await fetch(`${API_URL}/cliente/cadastrar`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(cliente)\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao criar cliente');\n    }\n  },\n  async update(id, cliente) {\n    const clienteComId = {\n      ...cliente,\n      id\n    };\n    const response = await fetch(`${API_URL}/cliente/atualizar`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(clienteComId)\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao atualizar cliente');\n    }\n  },\n  async delete(id) {\n    const response = await fetch(`${API_URL}/cliente/excluir`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao deletar cliente');\n    }\n  }\n};","map":{"version":3,"names":["API_URL","clienteService","getAll","response","fetch","ok","Error","json","getById","id","create","cliente","method","headers","body","JSON","stringify","update","clienteComId","delete"],"sources":["/Users/pedrovaz/Library/Mobile Documents/com~apple~CloudDocs/PERSONAL/4. Estudos/Fatec - DSM/2-SEM/Tecnicas Progr I/atv/atviv/front/src/services/clienteService.ts"],"sourcesContent":["import { Cliente, ClienteFormData } from '../types/Cliente';\n\nconst API_URL = 'http://localhost:32831';\n\nexport const clienteService = {\n    async getAll(): Promise<Cliente[]> {\n        const response = await fetch(`${API_URL}/cliente/clientes`);\n        if (!response.ok) {\n            throw new Error('Erro ao buscar clientes');\n        }\n        return response.json();\n    },\n\n    async getById(id: number): Promise<Cliente> {\n        const response = await fetch(`${API_URL}/cliente/${id}`);\n        if (!response.ok) {\n            throw new Error('Erro ao buscar cliente');\n        }\n        return response.json();\n    },\n\n    async create(cliente: ClienteFormData): Promise<void> {\n        const response = await fetch(`${API_URL}/cliente/cadastrar`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(cliente),\n        });\n        if (!response.ok) {\n            throw new Error('Erro ao criar cliente');\n        }\n    },\n\n    async update(id: number, cliente: ClienteFormData): Promise<void> {\n        const clienteComId = { ...cliente, id };\n        const response = await fetch(`${API_URL}/cliente/atualizar`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(clienteComId),\n        });\n        if (!response.ok) {\n            throw new Error('Erro ao atualizar cliente');\n        }\n    },\n\n    async delete(id: number): Promise<void> {\n        const response = await fetch(`${API_URL}/cliente/excluir`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ id }),\n        });\n        if (!response.ok) {\n            throw new Error('Erro ao deletar cliente');\n        }\n    }\n}; "],"mappings":"AAEA,MAAMA,OAAO,GAAG,wBAAwB;AAExC,OAAO,MAAMC,cAAc,GAAG;EAC1B,MAAMC,MAAMA,CAAA,EAAuB;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,mBAAmB,CAAC;IAC3D,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC9C;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,OAAOA,CAACC,EAAU,EAAoB;IACxC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,YAAYS,EAAE,EAAE,CAAC;IACxD,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC7C;IACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMG,MAAMA,CAACC,OAAwB,EAAiB;IAClD,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,oBAAoB,EAAE;MACzDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAChC,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMW,MAAMA,CAACR,EAAU,EAAEE,OAAwB,EAAiB;IAC9D,MAAMO,YAAY,GAAG;MAAE,GAAGP,OAAO;MAAEF;IAAG,CAAC;IACvC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,oBAAoB,EAAE;MACzDY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,YAAY;IACrC,CAAC,CAAC;IACF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAChD;EACJ,CAAC;EAED,MAAMa,MAAMA,CAACV,EAAU,EAAiB;IACpC,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,kBAAkB,EAAE;MACvDY,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAG,CAAC;IAC/B,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC9C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}